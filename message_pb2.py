# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: message.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rmessage.proto\"\x8f\x01\n\x06Member\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x16\n\x0eversion_number\x18\x03 \x01(\x03\x12\x19\n\x11heartbeat_counter\x18\x04 \x01(\x03\x12\x1a\n\x12incarnation_number\x18\x05 \x01(\x03\x12\x17\n\x06status\x18\x06 \x01(\x0e\x32\x07.Status\"%\n\tHeartbeat\x12\x18\n\x07members\x18\x01 \x03(\x0b\x32\x07.Member\":\n\x0bSdfsMessage\x12\x0c\n\x04type\x18\x01 \x01(\x03\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x0f\n\x07padding\x18\x03 \x01(\x0c\"@\n\x11MapleJuiceMessage\x12\x0c\n\x04type\x18\x01 \x01(\x03\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x0f\n\x07padding\x18\x03 \x01(\x0c*:\n\x06Status\x12\x08\n\x04NONE\x10\x00\x12\t\n\x05\x41LIVE\x10\x01\x12\x0e\n\nSUSPICIOUS\x10\x02\x12\x0b\n\x07\x43ONFIRM\x10\x03\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'message_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_STATUS']._serialized_start=328
  _globals['_STATUS']._serialized_end=386
  _globals['_MEMBER']._serialized_start=18
  _globals['_MEMBER']._serialized_end=161
  _globals['_HEARTBEAT']._serialized_start=163
  _globals['_HEARTBEAT']._serialized_end=200
  _globals['_SDFSMESSAGE']._serialized_start=202
  _globals['_SDFSMESSAGE']._serialized_end=260
  _globals['_MAPLEJUICEMESSAGE']._serialized_start=262
  _globals['_MAPLEJUICEMESSAGE']._serialized_end=326
# @@protoc_insertion_point(module_scope)
